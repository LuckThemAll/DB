from models import *


class Conflict:
    def __init__(self, type_id, name, fields):
        self.type_id = type_id
        self.name = name
        self.fields = fields

    def create(self):
        sql = SQLBuilder.create_conflict(SQLBuilder(SchedItems()), self.fields)
        print('query     ', sql)
        cur.execute(sql)
        conflicting_items = cur.fetchall()
        past_unit = ()
        group_id = 0
        for item in conflicting_items:
            if item == conflicting_items[0]:
                past_unit = item
            if item[1:] != past_unit[1:]:
                group_id += 1
            sql = SQLBuilder.get_insert(SQLBuilder(SchedItems()), None,
                                        "CONFLICTS", ["CONFLICT_TYPE_ID", "CONFLICT_GROUP_ID", "SCHED_ITEM_ID"], True)
            print('query     ', sql)
            cur.execute(sql, [self.type_id, group_id, item[0]])
            past_unit = item


def update_conflicts():
    cur.execute('''RECREATE TABLE CONFLICTS(
                         ID Integer GENERATED BY DEFAULT AS IDENTITY,
                         CONFLICT_TYPE_ID Integer NOT NULL,
                         CONFLICT_GROUP_ID Integer NOT NULL,
                         SCHED_ITEM_ID Integer NOT NULL,
                         PRIMARY KEY (ID)
                     )''')
    cur.transaction.commit()
    for conflict in conflicts:
        conflict.create()
    cur.transaction.commit()


conflicts = (
    Conflict("0", "Одинаковые аудитории", ["WEEKDAY_ID", "LESSON_ID", "AUDIENCE_ID"]),
    Conflict("1", "Одинаковый преподаватель", ["WEEKDAY_ID", "LESSON_ID", "TEACHER_ID"]),
    Conflict("2", "Одинаковая группа", ["WEEKDAY_ID", "LESSON_ID", "GROUP_ID"])
    )